/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha2

import (
	v1alpha2 "github.com/kyverno/kyverno/api/kyverno/v1alpha2"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ReportChangeRequestLister helps list ReportChangeRequests.
// All objects returned here must be treated as read-only.
type ReportChangeRequestLister interface {
	// List lists all ReportChangeRequests in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha2.ReportChangeRequest, err error)
	// ReportChangeRequests returns an object that can list and get ReportChangeRequests.
	ReportChangeRequests(namespace string) ReportChangeRequestNamespaceLister
	ReportChangeRequestListerExpansion
}

// reportChangeRequestLister implements the ReportChangeRequestLister interface.
type reportChangeRequestLister struct {
	indexer cache.Indexer
}

// NewReportChangeRequestLister returns a new ReportChangeRequestLister.
func NewReportChangeRequestLister(indexer cache.Indexer) ReportChangeRequestLister {
	return &reportChangeRequestLister{indexer: indexer}
}

// List lists all ReportChangeRequests in the indexer.
func (s *reportChangeRequestLister) List(selector labels.Selector) (ret []*v1alpha2.ReportChangeRequest, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha2.ReportChangeRequest))
	})
	return ret, err
}

// ReportChangeRequests returns an object that can list and get ReportChangeRequests.
func (s *reportChangeRequestLister) ReportChangeRequests(namespace string) ReportChangeRequestNamespaceLister {
	return reportChangeRequestNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ReportChangeRequestNamespaceLister helps list and get ReportChangeRequests.
// All objects returned here must be treated as read-only.
type ReportChangeRequestNamespaceLister interface {
	// List lists all ReportChangeRequests in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha2.ReportChangeRequest, err error)
	// Get retrieves the ReportChangeRequest from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha2.ReportChangeRequest, error)
	ReportChangeRequestNamespaceListerExpansion
}

// reportChangeRequestNamespaceLister implements the ReportChangeRequestNamespaceLister
// interface.
type reportChangeRequestNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ReportChangeRequests in the indexer for a given namespace.
func (s reportChangeRequestNamespaceLister) List(selector labels.Selector) (ret []*v1alpha2.ReportChangeRequest, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha2.ReportChangeRequest))
	})
	return ret, err
}

// Get retrieves the ReportChangeRequest from the indexer for a given namespace and name.
func (s reportChangeRequestNamespaceLister) Get(name string) (*v1alpha2.ReportChangeRequest, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha2.Resource("reportchangerequest"), name)
	}
	return obj.(*v1alpha2.ReportChangeRequest), nil
}
