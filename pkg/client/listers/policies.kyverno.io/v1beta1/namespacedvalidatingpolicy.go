/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1beta1

import (
	policieskyvernoiov1beta1 "github.com/kyverno/kyverno/api/policies.kyverno.io/v1beta1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// NamespacedValidatingPolicyLister helps list NamespacedValidatingPolicies.
// All objects returned here must be treated as read-only.
type NamespacedValidatingPolicyLister interface {
	// List lists all NamespacedValidatingPolicies in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*policieskyvernoiov1beta1.NamespacedValidatingPolicy, err error)
	// NamespacedValidatingPolicies returns an object that can list and get NamespacedValidatingPolicies.
	NamespacedValidatingPolicies(namespace string) NamespacedValidatingPolicyNamespaceLister
	NamespacedValidatingPolicyListerExpansion
}

// namespacedValidatingPolicyLister implements the NamespacedValidatingPolicyLister interface.
type namespacedValidatingPolicyLister struct {
	listers.ResourceIndexer[*policieskyvernoiov1beta1.NamespacedValidatingPolicy]
}

// NewNamespacedValidatingPolicyLister returns a new NamespacedValidatingPolicyLister.
func NewNamespacedValidatingPolicyLister(indexer cache.Indexer) NamespacedValidatingPolicyLister {
	return &namespacedValidatingPolicyLister{listers.New[*policieskyvernoiov1beta1.NamespacedValidatingPolicy](indexer, policieskyvernoiov1beta1.Resource("namespacedvalidatingpolicy"))}
}

// NamespacedValidatingPolicies returns an object that can list and get NamespacedValidatingPolicies.
func (s *namespacedValidatingPolicyLister) NamespacedValidatingPolicies(namespace string) NamespacedValidatingPolicyNamespaceLister {
	return namespacedValidatingPolicyNamespaceLister{listers.NewNamespaced[*policieskyvernoiov1beta1.NamespacedValidatingPolicy](s.ResourceIndexer, namespace)}
}

// NamespacedValidatingPolicyNamespaceLister helps list and get NamespacedValidatingPolicies.
// All objects returned here must be treated as read-only.
type NamespacedValidatingPolicyNamespaceLister interface {
	// List lists all NamespacedValidatingPolicies in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*policieskyvernoiov1beta1.NamespacedValidatingPolicy, err error)
	// Get retrieves the NamespacedValidatingPolicy from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*policieskyvernoiov1beta1.NamespacedValidatingPolicy, error)
	NamespacedValidatingPolicyNamespaceListerExpansion
}

// namespacedValidatingPolicyNamespaceLister implements the NamespacedValidatingPolicyNamespaceLister
// interface.
type namespacedValidatingPolicyNamespaceLister struct {
	listers.ResourceIndexer[*policieskyvernoiov1beta1.NamespacedValidatingPolicy]
}
