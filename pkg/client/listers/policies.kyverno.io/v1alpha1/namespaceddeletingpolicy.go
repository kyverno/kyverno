/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	policieskyvernoiov1alpha1 "github.com/kyverno/kyverno/api/policies.kyverno.io/v1alpha1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// NamespacedDeletingPolicyLister helps list NamespacedDeletingPolicies.
// All objects returned here must be treated as read-only.
type NamespacedDeletingPolicyLister interface {
	// List lists all NamespacedDeletingPolicies in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*policieskyvernoiov1alpha1.NamespacedDeletingPolicy, err error)
	// NamespacedDeletingPolicies returns an object that can list and get NamespacedDeletingPolicies.
	NamespacedDeletingPolicies(namespace string) NamespacedDeletingPolicyNamespaceLister
	NamespacedDeletingPolicyListerExpansion
}

// namespacedDeletingPolicyLister implements the NamespacedDeletingPolicyLister interface.
type namespacedDeletingPolicyLister struct {
	listers.ResourceIndexer[*policieskyvernoiov1alpha1.NamespacedDeletingPolicy]
}

// NewNamespacedDeletingPolicyLister returns a new NamespacedDeletingPolicyLister.
func NewNamespacedDeletingPolicyLister(indexer cache.Indexer) NamespacedDeletingPolicyLister {
	return &namespacedDeletingPolicyLister{listers.New[*policieskyvernoiov1alpha1.NamespacedDeletingPolicy](indexer, policieskyvernoiov1alpha1.Resource("namespaceddeletingpolicy"))}
}

// NamespacedDeletingPolicies returns an object that can list and get NamespacedDeletingPolicies.
func (s *namespacedDeletingPolicyLister) NamespacedDeletingPolicies(namespace string) NamespacedDeletingPolicyNamespaceLister {
	return namespacedDeletingPolicyNamespaceLister{listers.NewNamespaced[*policieskyvernoiov1alpha1.NamespacedDeletingPolicy](s.ResourceIndexer, namespace)}
}

// NamespacedDeletingPolicyNamespaceLister helps list and get NamespacedDeletingPolicies.
// All objects returned here must be treated as read-only.
type NamespacedDeletingPolicyNamespaceLister interface {
	// List lists all NamespacedDeletingPolicies in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*policieskyvernoiov1alpha1.NamespacedDeletingPolicy, err error)
	// Get retrieves the NamespacedDeletingPolicy from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*policieskyvernoiov1alpha1.NamespacedDeletingPolicy, error)
	NamespacedDeletingPolicyNamespaceListerExpansion
}

// namespacedDeletingPolicyNamespaceLister implements the NamespacedDeletingPolicyNamespaceLister
// interface.
type namespacedDeletingPolicyNamespaceLister struct {
	listers.ResourceIndexer[*policieskyvernoiov1alpha1.NamespacedDeletingPolicy]
}
