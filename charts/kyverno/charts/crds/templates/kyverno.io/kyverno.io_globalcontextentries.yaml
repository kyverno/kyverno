{{- if .Values.groups.kyverno.globalcontextentries }}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    {{- include "kyverno.crds.labels" . | nindent 4 }}
  annotations:
    {{- with .Values.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
    controller-gen.kubebuilder.io/version: v0.12.0
  name: globalcontextentries.kyverno.io
spec:
  group: kyverno.io
  names:
    categories:
    - kyverno
    kind: GlobalContextEntry
    listKind: GlobalContextEntryList
    plural: globalcontextentries
    shortNames:
    - gctxentry
    singular: globalcontextentry
  scope: Cluster
  versions:
  - name: v2alpha1
    schema:
      openAPIV3Schema:
        description: GlobalContextEntry declares resources to be cached.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec declares policy exception behaviors.
            properties:
              apiCall:
                description: APICall stores infos about API call that should be cached
                properties:
                  data:
                    description: Data specifies the POST data sent to the server.
                    items:
                      description: RequestData contains the HTTP POST data
                      properties:
                        key:
                          description: Key is a unique identifier for the data value
                          type: string
                        value:
                          description: Value is the data value
                          x-kubernetes-preserve-unknown-fields: true
                      required:
                      - key
                      - value
                      type: object
                    type: array
                  method:
                    default: GET
                    description: Method is the HTTP request type (GET or POST).
                    enum:
                    - GET
                    - POST
                    type: string
                  refreshInterval:
                    default: 10m
                    description: RefreshInterval defines the interval in duration
                      at which to poll the APICall
                    format: duration
                    type: string
                  service:
                    description: Service is an API call to a JSON web service
                    properties:
                      caBundle:
                        description: CABundle is a PEM encoded CA bundle which will
                          be used to validate the server certificate.
                        type: string
                      url:
                        description: URL is the JSON web service URL. A typical form
                          is `https://{service}.{namespace}:{port}/{path}`.
                        type: string
                    required:
                    - url
                    type: object
                  urlPath:
                    description: URLPath is the URL path to be used in the HTTP GET
                      or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces"
                      or  "/apis/apps/v1/deployments"). The format required is the
                      same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls
                      for details.
                    type: string
                type: object
              kubernetesResource:
                description: KubernetesResource stores infos about kubernetes resource
                  that should be cached
                properties:
                  group:
                    description: Group defines the group of the resource
                    type: string
                  namespace:
                    description: Namespace defines the namespace of the resource.
                      Leave empty for cluster scoped resources.
                    type: string
                  resource:
                    description: Resource defines the type of the resource
                    type: string
                  version:
                    description: Version defines the version of the resource
                    type: string
                type: object
            type: object
          status:
            description: Status contains globalcontextentry runtime data.
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              ready:
                description: Deprecated in favor of Conditions
                type: boolean
            required:
            - ready
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
{{- end }}
