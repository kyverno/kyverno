{{- if (not .Values.config.existingConfig) }}
apiVersion: v1
kind: ConfigMap
metadata:
  labels: {{ include "kyverno.labels" . | nindent 4 }}
    app: kyverno
  name: {{ template "kyverno.configMapName" . }}
  namespace: {{ template "kyverno.namespace" . }}
data:
  # resource types to be skipped by kyverno policy engine
  {{- if .Values.config.resourceFilters }}
    {{- $resourceFilters := .Values.config.resourceFilters }}
    {{- if .Values.excludeKyvernoNamespace }}
      {{- $resourceFilters = prepend .Values.config.resourceFilters (printf "[*,%s,*]" (include "kyverno.namespace" .)) }}
    {{- end }}
  resourceFilters: {{ tpl (join "" $resourceFilters) . | quote }}
  {{- end -}}
  {{- if .Values.config.excludeGroupRole }}
  excludeGroupRole: {{ join "," .Values.config.excludeGroupRole | quote }}
  {{- end -}}
  {{- if .Values.config.excludeUsername }}
  excludeUsername: {{ join "," .Values.config.excludeUsername | quote }}
  {{- end -}}
  {{- if or .Values.config.webhooks }}
    {{- $excludeDefault := dict "key" "kubernetes.io/metadata.name" "operator" "NotIn" "values" (list (include "kyverno.namespace" .)) }}
    {{- $newWebhook := list }}
    {{- range $webhook := .Values.config.webhooks }}
      {{- $namespaceSelector := default dict $webhook.namespaceSelector }}
      {{- $matchExpressions := default list $namespaceSelector.matchExpressions }}
      {{- if $.Values.excludeKyvernoNamespace }}
        {{- $namespaceSelector = dict "matchLabels" $namespaceSelector.matchLabels "matchExpressions" (append $matchExpressions $excludeDefault) }}
      {{- end }}
      {{- $newWebhook = merge (omit $webhook "namespaceSelector") (dict "namespaceSelector" $namespaceSelector) }}
    {{- end }}
  webhooks: {{ $newWebhook | toJson | quote }}
  {{- else if .Values.excludeKyvernoNamespace }}
  webhooks: '[{"namespaceSelector": {"matchExpressions": [{"key":"kubernetes.io/metadata.name","operator":"NotIn","values":["{{ include "kyverno.namespace" . }}"]}]}}]'
  {{- end -}}
  {{- if .Values.config.generateSuccessEvents }}
  generateSuccessEvents: {{ .Values.config.generateSuccessEvents | quote }}
  {{- end -}}
{{- end -}}
