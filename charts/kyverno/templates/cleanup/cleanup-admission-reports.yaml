{{- if .Values.cleanupJobs.admissionReports.enabled -}}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ template "kyverno.name" . }}-cleanup-admission-reports
  namespace: {{ template "kyverno.namespace" . }}
  labels:
    {{- include "kyverno.cleanup.labels" . | nindent 4 }}
spec:
  schedule: {{ .Values.cleanupJobs.admissionReports.schedule | quote }}
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: {{ .Values.cleanupJobs.admissionReports.history.success }}
  failedJobsHistoryLimit: {{ .Values.cleanupJobs.admissionReports.history.failure }}
  jobTemplate:
    spec:
      template:
        metadata:
          {{- with .Values.cleanupJobs.admissionReports.podAnnotations }}
          annotations:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.cleanupJobs.admissionReports.podLabels }}
          labels:
            {{- toYaml . | nindent 12 }}
          {{- end }}
        spec:
          serviceAccountName: {{ template "kyverno.name" . }}-cleanup-jobs
          {{- with .Values.cleanupJobs.admissionReports.podSecurityContext }}
          securityContext:
            {{- tpl (toYaml .) $ | nindent 12 }}
          {{- end }}
          containers:
          - name: cleanup
            image: {{ (include "kyverno.image" .Values.cleanupJobs.admissionReports) | quote }}
            imagePullPolicy: {{ .Values.cleanupJobs.admissionReports.image.pullPolicy }}
            command:
            - /bin/sh
            - -c
            - |
              COUNT=$(kubectl get admissionreports.kyverno.io -A | wc -l)
              if [ "$COUNT" -gt {{ .Values.cleanupJobs.admissionReports.threshold }} ]; then
                echo "too many reports found ($COUNT), cleaning up..."
                kubectl delete admissionreports.kyverno.io -A -l='!audit.kyverno.io/report.aggregate'
              else
                echo "($COUNT) reports found, no clean up needed"
              fi
            {{- with .Values.cleanupJobs.admissionReports.securityContext }}
            securityContext:
              {{- toYaml . | nindent 14 }}
            {{- end }}
            {{- with .Values.cleanupJobs.admissionReports.resources }}
            resources:
              {{- toYaml . | nindent 14 }}
            {{- end }}
          {{- with .Values.cleanupJobs.admissionReports.imagePullSecrets }}
          imagePullSecrets:
            {{- tpl (toYaml .) $ | nindent 12 }}
          {{- end }}
          restartPolicy: OnFailure
          {{- with .Values.cleanupJobs.admissionReports.tolerations }}
          tolerations:
            {{- tpl (toYaml .) $ | nindent 12 }}
          {{- end }}
          {{- with .Values.cleanupJobs.admissionReports.nodeSelector }}
          nodeSelector:
            {{- tpl (toYaml .) $ | nindent 12 }}
          {{- end }}
          {{- if or .Values.cleanupJobs.admissionReports.podAntiAffinity .Values.cleanupJobs.admissionReports.podAffinity .Values.cleanupJobs.admissionReports.nodeAffinity }}
          affinity:
            {{- with .Values.cleanupJobs.admissionReports.podAntiAffinity }}
            podAntiAffinity:
              {{- tpl (toYaml .) $ | nindent 14 }}
            {{- end }}
            {{- with .Values.cleanupJobs.admissionReports.podAffinity }}
            podAffinity:
              {{- tpl (toYaml .) $ | nindent 14 }}
            {{- end }}
            {{- with .Values.cleanupJobs.admissionReports.nodeAffinity }}
            nodeAffinity:
              {{- tpl (toYaml .) $ | nindent 14 }}
            {{- end }}
          {{- end }}
{{- end -}}
