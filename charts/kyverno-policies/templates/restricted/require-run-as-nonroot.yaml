{{- $name := "require-run-as-nonroot" }}
{{- if eq (include "kyverno-policies.podSecurityRestricted" (merge (dict "name" $name) .)) "true" }}
apiVersion: kyverno.io/v1
kind: {{ .Values.policyKind }}
metadata:
  name: {{ $name }}
  annotations:
    {{- with .Values.autogenControllers }}
    pod-policies.kyverno.io/autogen-controllers: {{ . }}
    {{- end }}
    policies.kyverno.io/title: Require runAsNonRoot
    policies.kyverno.io/category: Pod Security Standards (Restricted)
    {{- if .Values.podSecuritySeverity }}
    policies.kyverno.io/severity: {{ .Values.podSecuritySeverity | quote }}
    {{- end }}
    policies.kyverno.io/subject: Pod
    kyverno.io/kyverno-version: {{ default .Chart.AppVersion (include "kyverno-policies.kyvernoVersion" .) }}
    {{- if .Values.celEnabled }}
    policies.kyverno.io/minversion: 1.12.0
    {{- end }}
    kyverno.io/kubernetes-version: "{{ default .Chart.KubeVersion .Values.kubeVersionOverride }}"
    policies.kyverno.io/description: >-
      Containers must be required to run as non-root users. This policy ensures
      `runAsNonRoot` is set to `true`. A known issue prevents a policy such as this
      using `anyPattern` from being persisted properly in Kubernetes 1.23.0-1.23.2.
    {{- include "kyverno-policies.customAnnotations" . | nindent 4 }}
  labels: {{ include "kyverno-policies.labels" . | nindent 4 }}
spec:
  validationFailureAction: {{ .Values.validationFailureAction }}
  background: {{ .Values.background }}
  failurePolicy: {{ .Values.failurePolicy }}
  rules:
    - name: run-as-non-root
      match:
        any:
        - resources:
            kinds:
              - Pod
      {{- with merge (index .Values "policyExclude" "run-as-non-root") (index .Values "policyExclude" $name) }}
      exclude:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with index .Values "policyPreconditions" $name }}
      preconditions:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if not (quote .Values.skipBackgroundRequests | empty)  }}
      skipBackgroundRequests: {{ .Values.skipBackgroundRequests }}
      {{- end }}
      validate:
        message: >-
          Running as root is not allowed. Either the field spec.securityContext.runAsNonRoot
          must be set to `true`, or the fields spec.containers[*].securityContext.runAsNonRoot,
          spec.initContainers[*].securityContext.runAsNonRoot, and spec.ephemeralContainers[*].securityContext.runAsNonRoot
          must be set to `true`.
      {{- if .Values.celEnabled }}
        # Using CEL for validation
        cel:
          expressions:
            - expression: |
                (has(object.spec.securityContext) &&
                 has(object.spec.securityContext.runAsNonRoot) &&
                 object.spec.securityContext.runAsNonRoot == true) ||
                (object.spec.containers.all(container,
                   has(container.securityContext) &&
                   has(container.securityContext.runAsNonRoot) &&
                   container.securityContext.runAsNonRoot == true) &&
                 (!has(object.spec.initContainers) ||
                  object.spec.initContainers.all(container,
                    has(container.securityContext) &&
                    has(container.securityContext.runAsNonRoot) &&
                    container.securityContext.runAsNonRoot == true)) &&
                 (!has(object.spec.ephemeralContainers) ||
                  object.spec.ephemeralContainers.all(container,
                    has(container.securityContext) &&
                    has(container.securityContext.runAsNonRoot) &&
                    container.securityContext.runAsNonRoot == true)))
              message: "Pod must run as non-root (set runAsNonRoot=true).
        {{- else }}
        anyPattern:
        - spec:
            securityContext:
              runAsNonRoot: true
            =(ephemeralContainers):
            - =(securityContext):
                =(runAsNonRoot): true
            =(initContainers):
            - =(securityContext):
                =(runAsNonRoot): true
            containers:
            - =(securityContext):
                =(runAsNonRoot): true
        - spec:
            =(ephemeralContainers):
            - securityContext:
                runAsNonRoot: true
            =(initContainers):
            - securityContext:
                runAsNonRoot: true
            containers:
            - securityContext:
                runAsNonRoot: true
        {{- end }}
{{- end }}
