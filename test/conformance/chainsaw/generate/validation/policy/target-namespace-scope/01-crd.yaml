apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: roles.iam.aws.crossplane.io
spec:
  group: iam.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: Role
    listKind: RoleList
    plural: roles
    shortNames:
    - iamrole
    singular: role
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: An Role is a managed resource that represents an AWS IAM Role.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: An RoleSpec defines the desired state of an Role.
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: RoleParameters define the desired state of an AWS IAM
                  Role.
                properties:
                  assumeRolePolicyDocument:
                    description: AssumeRolePolicyDocument is the the trust relationship
                      policy document that grants an entity permission to assume the
                      role.
                    type: string
                  description:
                    description: Description is a description of the role.
                    type: string
                  maxSessionDuration:
                    description: 'MaxSessionDuration is the duration (in seconds)
                      that you want to set for the specified role. The default maximum
                      of one hour is applied. This setting can have a value from 1
                      hour to 12 hours. Default: 3600'
                    format: int32
                    type: integer
                  path:
                    description: 'Path is the path to the role. Default: /'
                    type: string
                  permissionsBoundary:
                    description: PermissionsBoundary is the ARN of the policy that
                      is used to set the permissions boundary for the role.
                    type: string
                  tags:
                    description: Tags. For more information about tagging, see Tagging
                      IAM Identities (https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html)
                      in the IAM User Guide.
                    items:
                      description: Tag represents user-provided metadata that can
                        be associated with a IAM role. For more information about
                        tagging, see Tagging IAM Identities (https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html)
                        in the IAM User Guide.
                      properties:
                        key:
                          description: The key name that can be used to look up or
                            retrieve the associated value. For example, Department
                            or Cost Center are common choices.
                          type: string
                        value:
                          description: "The value associated with this tag. For example,
                            tags with a key name of Department could have values such
                            as Human Resources, Accounting, and Support. Tags with
                            a key name of Cost Center might have values that consist
                            of the number associated with the different cost centers
                            in your company. Typically, many resources have tags with
                            the same key name but with different values. \n AWS always
                            interprets the tag Value as a single string. If you need
                            to store an array, you can store comma-separated values
                            in the string. However, you must interpret the value in
                            your code."
                          type: string
                      required:
                      - key
                      type: object
                    type: array
                required:
                - assumeRolePolicyDocument
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: An RoleStatus represents the observed state of an Role.
            properties:
              atProvider:
                description: RoleExternalStatus keeps the state for the external resource
                properties:
                  arn:
                    description: ARN is the Amazon Resource Name (ARN) specifying
                      the role. For more information about ARNs and how to use them
                      in policies, see IAM Identifiers (http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html)
                      in the IAM User Guide guide.
                    type: string
                  roleID:
                    description: RoleID is the stable and unique string identifying
                      the role. For more information about IDs, see IAM Identifiers
                      (http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html)
                      in the Using IAM guide.
                    type: string
                required:
                - arn
                - roleID
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions:
  - v1beta1