apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    admissions.enforcer/disabled: "true"
  labels:
    webhook.kyverno.io/managed-by: kyverno
  name: kyverno-resource-validating-webhook-cfg
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: kyverno-svc
      namespace: kyverno
      path: /ivpol/validate/check-signed-images-finegrained
      port: 443
  failurePolicy: Fail
  matchConditions:
  - expression: '!((object.apiVersion == ''v1'' && object.kind ==''Pod'')) || (has(object.metadata.labels)
      && has(object.metadata.labels.prod) && object.metadata.labels.prod == ''true'')'
    name: autogen-check-prod-label
  - expression: '!((object.apiVersion == ''batch/v1'' && object.kind ==''CronJob''))
      || (has(object.spec.jobTemplate.spec.template.metadata.labels) && has(object.spec.jobTemplate.spec.template.metadata.labels.prod)
      && object.spec.jobTemplate.spec.template.metadata.labels.prod == ''true'')'
    name: autogen-cronjobs-check-prod-label
  - expression: '!((object.apiVersion == ''apps/v1'' && object.kind ==''DaemonSet'')
      || (object.apiVersion == ''apps/v1'' && object.kind ==''Deployment'') || (object.apiVersion
      == ''apps/v1'' && object.kind ==''ReplicaSet'') || (object.apiVersion == ''apps/v1''
      && object.kind ==''StatefulSet'') || (object.apiVersion == ''batch/v1'' && object.kind
      ==''Job'')) || (has(object.spec.template.metadata.labels) && has(object.spec.template.metadata.labels.prod)
      && object.spec.template.metadata.labels.prod == ''true'')'
    name: autogen-defaults-check-prod-label
  matchPolicy: Equivalent
  name: ivpol.validate.kyverno.svc-fail-finegrained-check-signed-images-finegrained
  namespaceSelector: {}
  objectSelector: {}
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - pods
    scope: '*'
  - apiGroups:
    - batch
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - cronjobs
    scope: '*'
  - apiGroups:
    - apps
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - daemonsets
    - deployments
    - replicasets
    - statefulsets
    scope: '*'
  - apiGroups:
    - batch
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - jobs
    scope: '*'
  sideEffects: NoneOnDryRun
  timeoutSeconds: 10
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: kyverno-svc
      namespace: kyverno
      path: /ivpol/validate/check-signed-images-basic
      port: 443
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: ivpol.validate.kyverno.svc-fail
  namespaceSelector:
    matchExpressions:
    - key: kubernetes.io/metadata.name
      operator: NotIn
      values:
      - kube-system
    - key: kubernetes.io/metadata.name
      operator: NotIn
      values:
      - kyverno
  objectSelector: {}
  rules:
  - apiGroups:
    - batch
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - cronjobs
    scope: '*'
  - apiGroups:
    - apps
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - daemonsets
    - deployments
    - replicasets
    - statefulsets
    scope: '*'
  - apiGroups:
    - batch
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - jobs
    scope: '*'
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - pods
    scope: '*'
  sideEffects: NoneOnDryRun
  timeoutSeconds: 10

---

apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    admissions.enforcer/disabled: "true"
  labels:
    webhook.kyverno.io/managed-by: kyverno
  name: kyverno-resource-mutating-webhook-cfg
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: kyverno-svc
      namespace: kyverno
      path: /ivpol/mutate/check-signed-images-finegrained
      port: 443
  failurePolicy: Fail
  matchConditions:
  - expression: '!((object.apiVersion == ''v1'' && object.kind ==''Pod'')) || (has(object.metadata.labels)
      && has(object.metadata.labels.prod) && object.metadata.labels.prod == ''true'')'
    name: autogen-check-prod-label
  - expression: '!((object.apiVersion == ''batch/v1'' && object.kind ==''CronJob''))
      || (has(object.spec.jobTemplate.spec.template.metadata.labels) && has(object.spec.jobTemplate.spec.template.metadata.labels.prod)
      && object.spec.jobTemplate.spec.template.metadata.labels.prod == ''true'')'
    name: autogen-cronjobs-check-prod-label
  - expression: '!((object.apiVersion == ''apps/v1'' && object.kind ==''DaemonSet'')
      || (object.apiVersion == ''apps/v1'' && object.kind ==''Deployment'') || (object.apiVersion
      == ''apps/v1'' && object.kind ==''ReplicaSet'') || (object.apiVersion == ''apps/v1''
      && object.kind ==''StatefulSet'') || (object.apiVersion == ''batch/v1'' && object.kind
      ==''Job'')) || (has(object.spec.template.metadata.labels) && has(object.spec.template.metadata.labels.prod)
      && object.spec.template.metadata.labels.prod == ''true'')'
    name: autogen-defaults-check-prod-label
  matchPolicy: Equivalent
  name: ivpol.mutate.kyverno.svc-fail-finegrained-check-signed-images-finegrained
  namespaceSelector: {}
  objectSelector: {}
  reinvocationPolicy: Never
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - pods
    scope: '*'
  - apiGroups:
    - batch
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - cronjobs
    scope: '*'
  - apiGroups:
    - apps
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - daemonsets
    - deployments
    - replicasets
    - statefulsets
    scope: '*'
  - apiGroups:
    - batch
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - jobs
    scope: '*'
  sideEffects: NoneOnDryRun
  timeoutSeconds: 10
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: kyverno-svc
      namespace: kyverno
      path: /ivpol/mutate/check-signed-images-basic
      port: 443
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: ivpol.mutate.kyverno.svc-fail
  namespaceSelector:
    matchExpressions:
    - key: kubernetes.io/metadata.name
      operator: NotIn
      values:
      - kube-system
    - key: kubernetes.io/metadata.name
      operator: NotIn
      values:
      - kyverno
  objectSelector: {}
  reinvocationPolicy: Never
  rules:
  - apiGroups:
    - batch
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - cronjobs
    scope: '*'
  - apiGroups:
    - apps
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - daemonsets
    - deployments
    - replicasets
    - statefulsets
    scope: '*'
  - apiGroups:
    - batch
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - jobs
    scope: '*'
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - pods
    scope: '*'
  sideEffects: NoneOnDryRun
  timeoutSeconds: 10