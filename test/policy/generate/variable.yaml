apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: add-ns-access-controls
  annotations:
    policies.kyverno.io/category: Workload Isolation
    policies.kyverno.io/description: Create roles and role bindings for a new namespace
spec:
  rules:
  - name: generate-owner-role
    match:
      resources:
        kinds:
        - Namespace
    generate:
      kind: ClusterRole
      name: "ns-owner-{{request.object.metadata.name}}-{{request.userInfo.username}}"
      data:
        rules:
        - apiGroups: [""]
          resources: ["namespaces"]
          verbs: ["delete"]
          resourceNames:
            - "{{request.object.metadata.name}}"
  - name: generate-owner-role-binding
    match:
      resources:
        kinds:
        - Namespace
    generate:
      kind: ClusterRoleBinding
      name: "ns-owner-{{request.object.metadata.name}}-{{request.userInfo.username}}-binding"
      data:
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: "ns-owner-{{request.object.metadata.name}}-{{request.userInfo.username}}"
        subjects:
        - kind: ServiceAccount
        #  pre-defined context value (removes the suffix system:serviceaccount:<namespace>:<name> from userName)
          name: "{{serviceAccountName}}" # <name>
          namespace: "{{serviceAccountNamespace}}" # <namespace>
  - name: generate-admin-role-binding
    match:
      resources:
        kinds:
        - Namespace
    generate:
      kind: RoleBinding
      name: "ns-admin-{{request.object.metadata.name}}-{{request.userInfo.username}}-binding"
      namespace: "{{request.object.metadata.name}}"
      data:
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: admin
        subjects:
        - kind: ServiceAccount
          name: "{{serviceAccountName}}"
          namespace: "{{serviceAccountNamespace}}"
