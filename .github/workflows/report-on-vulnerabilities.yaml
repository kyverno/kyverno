name: report-on-vulnerabilities

on:
  workflow_dispatch: {}
  schedule:
    - cron: '23 2 * * *' # Every day at 02:23

permissions: {}

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  scan:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      results: ${{ steps.parse-results.outputs.results }}
    steps:
    - name: Scan for vulnerabilities
      uses: aquasecurity/trivy-action@41f05d9ecffa2ed3f1580af306000f734b733e54 # v0.8.0 (Trivy v0.34.0)
      with: 
        image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
        format: json
        ignore-unfixed: false
        severity: HIGH,CRITICAL
        output: scan.json

    - name: Parse scan results
      id: parse-results
      continue-on-error: true
      run: |
        VULNS=$(cat scan.json | jq '.Results[] | select(.Target=="ko-app/kyverno") | length')
        if [[ $VULNS -eq 0 ]]
        then
          echo "No vulnerabilities found, halting"
          echo "results=nothing" >> $GITHUB_OUTPUT
        else
          echo "Vulnerabilities found, creating issue"
          echo "results=found" >> $GITHUB_OUTPUT
        fi

    - name: Upload vulnerability scan report
      uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
      if: steps.parse-results.outputs.results == 'found'
      with:
        name: scan.json
        path: scan.json
        if-no-files-found: error

  open-issue:
    runs-on: ubuntu-latest
    if: needs.scan.outputs.results == 'found'
    needs: scan
    permissions:
      contents: read
      issues: write
    steps:
      - name: Checkout
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
      - name: Download scan
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
        with:
          name: scan.json
      - name: Set scan output
        id: set-scan-output
        run: echo "results=$(cat scan.json | jq -c)" >> $GITHUB_OUTPUT
      - uses: JasonEtco/create-an-issue@e27dddc79c92bc6e4562f268fffa5ed752639abd # v2.9.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RESULTS: ${{ steps.set-scan-output.outputs.results }}
        with:
          filename: .github/ISSUE_TEMPLATE/VULN-TEMPLATE.md
